group 'org.scriptonbasestar.scene'
version project_version

buildscript {
	repositories {
		jcenter()
//		mavenCentral()
	}
	dependencies {
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlin_version}")
		classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
	}
}

apply plugin: 'base'

allprojects {
	apply plugin: 'groovy'
	apply plugin: 'java'
	apply plugin: 'kotlin'
	apply plugin: 'scala'
	apply plugin: 'eclipse'
	apply plugin: 'idea'

	[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
	group "org.scriptonbasestar.tool"
	version = project_version
	sourceCompatibility = java_version
	targetCompatibility = java_version
	compileKotlin {
		kotlinOptions.jvmTarget = java_version
	}
	compileTestKotlin {
		kotlinOptions.jvmTarget = java_version
	}

	repositories {
		mavenCentral()
		jcenter()
		mavenLocal()
	}
	idea {
		module {
			downloadJavadoc = true
			downloadSources = true
		}
	}
	eclipse {
		classpath {
			downloadJavadoc = true
			downloadSources = true
		}
	}
	task printProjectName {
		doLast {
			println "${project.name}"
		}
	}
	task "create-dirs" {
		doLast {
			sourceSets*.java.srcDirs*.each { it.mkdirs() }
			sourceSets*.kotlin.srcDirs*.each { it.mkdirs() }
			sourceSets*.resources.srcDirs*.each { it.mkdirs() }
			sourceSets*.groovy.srcDirs*.each { it.mkdirs() }
			sourceSets*.scala.srcDirs*.each { it.mkdirs() }
		}
	}

	dependencies{
		testCompile 'org.scalatest:scalatest_2.11:3.0.0'
		compileOnly "org.projectlombok:lombok:$lombok_version"
		compileOnly "org.codehaus.groovy:groovy-all:$groovy_version"
		compileOnly 'org.scala-lang:scala-library:2.11.8'
		compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
		compileOnly "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

		testCompileOnly "org.projectlombok:lombok:$lombok_version"
		testCompileOnly "org.codehaus.groovy:groovy-all:$groovy_version"
		testCompileOnly 'org.scala-lang:scala-library:2.11.8'
		testCompileOnly "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
		testCompileOnly "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
	}

	task stage(dependsOn: ['build'])
	build.mustRunAfter clean

	//	111
//	repositories {
//		flatDir {
//			name "fileRepo"
//			dirs "repo"
//		}
//	}
//	uploadArchives {
//		repositories {
//			add project.repositories.fileRepo
//			ivy {
//				credentials {
//					username bintrayUser
//					password bintrayApiKey
//				}
//				url "https://dl.bintray.com/archmagece/jvm-repo"
//			}
//		}
//	}

//	222
	apply plugin: 'maven'
	apply plugin: 'maven-publish'
	apply plugin: 'com.jfrog.bintray'

	publishing {
		publications {
			MyPublication(MavenPublication) {
				from components.java
//				artifact sourcesJar
//				artifact javadocJar
				groupId 'org.scriptonbasestar.tool'
				artifactId project.name
				version project_version
			}
		}
	}

	bintray {
		user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
		key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
		publications = ['MyPublication']
		pkg {
			repo = 'jvm-repo'
			name = 'sb-tool-jvm'
			desc = 'tool for jvm languages'
			userOrg = "archmagece"
			licenses = ['Apache-2.0']
			vcsUrl = 'https://github.com/ScriptonBasestar-Lib/sb-tool-jvm.git'
			labels = ['java', 'kotlin', 'groovy', 'gradle', 'library']
			publicDownloadNumbers = true
//			attributes= ['a': ['ay1', 'ay2'], 'b': ['bee'], c: 'cee'] //Optional package-level attributes
			version {
				name = project_version
				desc = "released at ${new Date()} : $project_version"
				released = new Date()
				vcsTag = project_version
//				attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']
			}
		}
	}
}

subprojects{
	dependencies{
//		compile project(':core')

		testCompile "org.slf4j:slf4j-api:$slf4j_version"
		testCompileOnly "org.slf4j:jcl-over-slf4j:$slf4j_version"

		testCompile "junit:junit:$junit_version"
	}
}
